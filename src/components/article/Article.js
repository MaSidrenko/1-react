import './Arcticle.css'

function Article(props) {
    // function Article( props ) {
    const { title = "<h1> Заголовок статьи </h1>", content = "<p> Содержимое статьи </p>" } = props;
    return (
        <article>
            <hr />
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            <div dangerouslySetInnerHTML={{__html: `${title} ${content}`}}/>
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
            {/*!!!!!!!!!!!!!!!!!
            НИКОГДА ТАК НЕ ДЕЛАТЬ, 
            ЕСЛИ ДАННЫЕ НЕ МОИ(Допустим пользовать вводит данные в input) 
            ОПАСТНОСТЬ XSS-АТАКИ
            !!!!!!!!!!!!!!!!! */}
    
            <hr />

        </article>
    );
}
// Является устаревшим подходом для функцианального подхода
// (Все ещё используется в классовом (ООП) подходе)
// с React 19, новый подход использует деструкторизацию
// Пример выше
// https://react.dev/blog/2024/04/25/react-19-upgrade-guide#removed-proptypes-and-defaultprops
// https://react.dev/learn/passing-props-to-a-component
// Article.defaultProps = {
//     title: "Заголовок статьи",
//     content: "Содержимое статьи",
// };

export default Article;